<html lang="es">

<head>
  <meta charset="UTF-8">
  <title>Lista de Productos</title>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <style>
    body {
      background-color: #161616;
      color: #fff;
      font-family: Arial, sans-serif;
    }

    .card-custom {
      background-color: #495057;
      border: none;
      border-radius: 0.25rem;
      padding: 20px;
      margin: auto;
      max-width: 800px;
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
    }

    .btn-custom {
      background-color: #6c757d;
      color: #fff;
      border: none;
    }

    .btn-custom:hover {
      background-color: #7a8288;
    }

    .list-group-item {
      background-color: #343a40;
      border: none;
    }

    .form-control {
      background-color: #495057;
      color: #fff;
      border: 1px solid #6c757d;
    }

    .page-link {
      color: #fff;
      background-color: #6c757d;
      border-color: #6c757d;
    }

    .page-link:hover {
      color: #161616;
      background-color: #adb5bd;
      border-color: #adb5bd;
    }
  </style>
</head>

<body>
  <div class="d-flex justify-content-center align-items-center vh-100">
    <div class="card-custom">
      <h1 class="text-center">Lista de Productos</h1>
      <ul class="list-group mb-3">
        {{#each products}}
        <li class="list-group-item d-flex justify-content-between align-items-center">
          <span style="color:white; margin-right: 40px;">{{this.title}}</span>
          <div>
            <a href="/products/{{this.id}}" class="btn btn-custom btn-sm">Ver Detalles</a>
            <button class="btn btn-success btn-sm ml-2 add-to-cart" data-product-id="{{this.id}}"
              data-product-title="{{this.title}}" data-product-price="{{this.price}}">Añadir al Carrito</button>
            <button type="button" id="btn-delete" class="btn btn-danger btn-sm ml-2 btn-delete"
              data-product-id="{{this.id}}">Eliminar Producto</button>
          </div>
        </li>
        {{/each}}
      </ul>
      <h2>Agregar Producto</h2>
      <form id="productForm" class="mt-3">
        <div class="form-group">
          <input type="text" class="form-control" id="title" placeholder="Title" required>
        </div>
        <div class="form-group">
          <input type="text" class="form-control" id="code" placeholder="code" required>
        </div>
        <div class="form-group">
          <input type="number" class="form-control" id="price" placeholder="Price" required>
        </div>
        <div class="form-group">
          <input type="text" class="form-control" id="stock" placeholder="stock" required>
        </div>
        <div class="form-group">
          <input type="text" class="form-control" id="description" placeholder="description" required>
        </div>
        <div style="position:relative; left:417px;">
          <button type="submit" class="btn btn-primary mt-4">Add Product</button>
        </div>

      </form>
      </ul>

      <div class="mt-3">
        <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center">
            {{#if hasPrevPage}}
            <li class="page-item">
              <a class="page-link text-black" href="{{prevPageLink}}" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
                {{page}}
              </a>
            </li>
            {{/if}}

            {{#if hasNextPage}}
            <p class="text-white">batata</p>
            <li class="page-item">
              <a class="page-link text-black" href="{{nextPageLink}}" aria-label="Next">
                {{page}}
                <span aria-hidden="true">&raquo;</span>
              </a>
            </li>
            {{/if}}
          </ul>
        </nav>
      </div>
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
  <script>
    const addToCartButtons = document.querySelectorAll('.add-to-cart');
    addToCartButtons.forEach(button => {
      button.addEventListener('click', async (event) => {
        const productId = event.target.getAttribute('data-product-id');
        const productTitle = event.target.getAttribute('data-product-title');
        const productPrice = event.target.getAttribute('data-product-price');
        const productDescription = event.target.getAttribute('data-product-description');

        const product = {
          id: productId,
          title: productTitle,
          price: parseFloat(productPrice),
          description: productDescription
        };

        console.log(product)
        try {
          const response = await fetch(`/api/carts/products`, {
            method: "POST",
            headers: { "Content-type": "application/json; charset=UTF-8" },
            body: JSON.stringify(product)
          });
          console.log(response)
          if (response.status === 200) {
            Swal.fire({
              title: 'Congratulations!',
              text: 'Tu producto ha sido agregado al carrito con exito!',
              icon: 'success',
              background: '#ffff', // Dark background color
              color: '#ffff', // White text color
              confirmButtonColor: '#6c757d', // Confirm button color
            });
          }
          console.log(response);
        } catch (error) {
          console.error('Error al realizar la solicitud POST:', error);
        }
      });
    });

    const productForm = document.getElementById("productForm");
    productForm.addEventListener("submit", async function (event) {
      event.preventDefault();
      const title = document.getElementById("title").value;
      const code = document.getElementById("code").value;
      const price = parseFloat(document.getElementById("price").value);
      const stock = document.getElementById("stock").value;
      const description = document.getElementById("description").value;

      if (!title || !code || isNaN(price) || price <= 0 || !stock || !description) {
        alert("Por favor, ingrese información válida.");
        return;
      }

      const productData = {
        title,
        code,
        price,
        stock,
        description
      };

      try {
        const response = await fetch("/api/products", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(productData),
        });

        if (response.status === 201) {
          document.getElementById("title").value = "";
          document.getElementById("code").value = "";
          document.getElementById("price").value = "";
          document.getElementById("stock").value = "";
          document.getElementById("description").value = "";

          Swal.fire({
            title: 'Congratulations!',
            text: 'Tu producto ha sido agregado a la lista con exito, porfavor refresca la pagina para ver los cambios!',
            icon: 'success',
            background: '#ffff', // Dark background color
            color: '#ffff', // White text color
            confirmButtonColor: '#6c757d', // Confirm button color
          });

        }
      } catch (error) {
        console.error("Error al realizar la solicitud POST:", error);
      }
    });

    document.addEventListener('DOMContentLoaded', function () {
      const deleteButtons = document.querySelectorAll('.btn-delete');

      deleteButtons.forEach(button => {
        button.addEventListener('click', async (event) => {
          const productId = event.target.getAttribute('data-product-id');
          console.log(productId);
          try {
            const res = await fetch(`/api/products/${productId}`, {
              method: "DELETE",
              headers: { "Content-type": "application/json; charset=UTF-8" },
            });

            if (res.status === 403) {
              Swal.fire({
                title: 'Oops...',
                text: 'No puedes eliminar un producto del cual no eres el creador.',
                icon: 'error',
                background: '#ffff', // Dark background color
                color: '#ffff', // White text color
                confirmButtonColor: '#6c757d', // Confirm button color
                iconColor: '#dc3545' // Color for the icon
              });
            }
            if (res.status === 204) {
              Swal.fire({
                title: 'Congratulations!',
                text: 'Tu producto ha sido eliminado con exito, porfavor refresca la pagina para ver los cambios en tu lista.',
                icon: 'success',
                background: '#ffff', // Dark background color
                color: '#ffff', // White text color
                confirmButtonColor: '#6c757d', // Confirm button color
              });
            }
            console.log(res)
          } catch (error) {
            console.error(error);
          }
        });
      });
    });

  </script>
</body>

</html>